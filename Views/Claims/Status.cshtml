@model IEnumerable<CMCS.Models.Claims>

@{
    ViewData["Title"] = "Index";
}


<div class="container">
    <h1>Claims</h1>
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.First().Name)</th>
                    <th>@Html.DisplayNameFor(model => model.First().Surname)</th>
                    <th>@Html.DisplayNameFor(model => model.First().Email)</th>
                    <th>@Html.DisplayNameFor(model => model.First().HoursWorked)</th>
                    <th>@Html.DisplayNameFor(model => model.First().HourlyRate)</th>
                    <th>@Html.DisplayNameFor(model => model.First().ClaimDate)</th>
                    <th>@Html.DisplayNameFor(model => model.First().Description)</th>
                    <th>@Html.DisplayNameFor(model => model.First().Documentation)</th>
                    <th>@Html.DisplayNameFor(model => model.First().Status)</th>                
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr id="claim-@item.id">
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Surname)</td>
                        <td>@Html.DisplayFor(modelItem => item.Email)</td>
                        <td>@Html.DisplayFor(modelItem => item.HoursWorked)</td>
                        <td>@Html.DisplayFor(modelItem => item.HourlyRate)</td>
                        <td>@Html.DisplayFor(modelItem => item.ClaimDate)</td>
                        <td>@Html.DisplayFor(modelItem => item.Description)</td>
                        <td>@Html.DisplayFor(modelItem => item.Documentation)</td>
                        <td><span class="badge badge-secondary">@Html.DisplayFor(modelItem => item.Status)</span></td>                       
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="~/lib/signalr/dist/signalr.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder().withUrl("/claimHub").build();

        connection.on("ReceiveClaimUpdate", function (claim) {
            var claimElement = document.getElementById(`claim-${claim.id}`);
            if (claimElement) {
                claimElement.querySelector("span.badge").textContent = claim.Status;
            }
        });

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });
    </script>
}


<div id="claims">
    @foreach (var claim in Model)
    {
        <div id="claim-@claim.id">
            <p>Claim ID: @claim.id</p>
            <p>Status: <span>@claim.Status</span></p>
            <div class="progress">
                <div class="progress-bar" style="width: @(claim.Status == "Approved" ? "100%" : claim.Status == "Rejected" ? "0%" : "50%")">
                    @claim.Status
                </div>
            </div>
        </div>
    }
</div>

<script src="~/lib/signalr/signalr.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/claimHub")
        .build();

    connection.on("ReceiveClaimUpdate", function (claim) {
        // Update the progress bar and claim status in the UI
        updateClaimStatus(claim);
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });

    function updateClaimStatus(claim) {
        // Logic to update the UI with the new claim status
        const claimElement = document.getElementById(`claim-${claim.id}`);
        claimElement.innerText = claim.status;
        // Update progress bar logic here
    }
</script>
